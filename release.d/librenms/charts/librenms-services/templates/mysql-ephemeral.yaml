apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.Namespace }}
  name: mysql
spec:
  type: ClusterIP
  selector:
    component: mysql
  ports:
  - name: mysql
    port: {{ .Values.mysql.servicePort }}
    targetPort: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Values.Namespace }}
  name: mysql
  labels:
    application: librenms
spec:
  serviceName: mysql
  selector:
    matchLabels:
      component: mysql
  replicas: 1
  template:
    metadata:
      namespace: {{ .Values.Namespace }}
      name: mysql
      labels:
        application: librenms
        component: mysql
    spec:
      initContainers:
      - name: mysql-prepare-volume
        image: {{ .Values.mysql.prepareVolumeImage.repository }}:{{ .Values.mysql.prepareVolumeImage.tag }}
        envFrom:
        - configMapRef:
            name: mysql
        volumeMounts:
        - name: mysql-volume
          subPath: configuration
          mountPath: /configuration
        - name: mysql-volume
          subPath: database
          mountPath: /database
        - name: mysql-volume
          subPath: initialization
          mountPath: /initialization
      containers:
      - name: mysql
        image: {{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}
        envFrom:
        - configMapRef:
            name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: application
              key: mysql_root_password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_mysql_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_mysql_password
        volumeMounts:
        - name: mysql-volume
          subPath: configuration
          mountPath: /etc/mysql/conf.d
        - name: mysql-volume
          subPath: database
          mountPath: /var/lib/mysql
        - name: mysql-volume
          subPath: initialization
          mountPath: /docker-entrypoint-initdb.d
        ports:
        - name: mysql
          containerPort: {{ .Values.mysql.providerPort }}
          protocol: TCP
      volumes:
       - name: mysql-volume
         emptyDir: {}
