apiVersion: networking.k8s.io/v1beta1
#apiVersion: extensions/v1beta1 
kind: Ingress
metadata:
  namespace: {{ .Release.Namespace }}
  name: application
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: application
          servicePort: {{ .Values.Application.servicePort }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: application
spec:
  type: NodePort
  selector:
    component: application
  ports:
  - name: application
    port: {{ .Values.Application.servicePort }}
    targetPort: application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: application
  labels:
    application: librenms
spec:
  replicas: {{ .Values.Application.replicas }}
  selector:
    matchLabels:
      component: application
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      name: application
      labels:
        application: librenms
        component: application
    spec:
      initContainers:
      - name: application-prepare-volume
        {{- if .Values.snmpPing.enabled }}
        image: {{ .Values.Application.prepareVolumeImage.repository }}-sping:{{ .Values.Application.prepareVolumeImage.tag }}
        {{- else }}
        image: {{ .Values.Application.prepareVolumeImage.repository }}:{{ .Values.Application.prepareVolumeImage.tag }}
        {{- end }}
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: application
        env:
        - name: LIBRENMS_MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_mysql_user
        - name: LIBRENMS_MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_mysql_password
        - name: LIBRENMS_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_redis_password
        - name: LIBRENMS_APPLICATION_KEY
          valueFrom:
            secretKeyRef:
              name: application
              key: librenms_application_key
        volumeMounts:
        - name: application-volume
          mountPath: /opt/librenms
      {{- include "librenms.checks" . | indent 6 }}
      containers:
      - name: application-php-fpm
        {{- if .Values.snmpPing.enabled }}
        image: {{ .Values.Application.phpImage.repository }}-sping:{{ .Values.Application.phpImage.tag }}
        {{- else }}
        image: {{ .Values.Application.phpImage.repository }}:{{ .Values.Application.phpImage.tag }}
        {{- end }}
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: application
        volumeMounts:
        - name: application-volume
          mountPath: /opt/librenms
        - name: application-socket
          mountPath: /sock
      - name: application-nginx
        image: {{ .Values.Application.nginxImage.repository }}:{{ .Values.Application.nginxImage.tag }}
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: application
        volumeMounts:
        - name: application-volume
          mountPath: /opt/librenms
        - name: application-socket
          mountPath: /sock
        ports:
        - name: application
          containerPort: {{ .Values.Application.providerPort }}
          protocol: TCP
      volumes:
      - name: application-volume
        emptyDir: {}
      - name: application-socket
        emptyDir:
          medium: Memory
