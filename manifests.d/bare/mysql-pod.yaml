apiVersion: v1
kind: Pod
metadata:
  name: mysql
  labels:
    application: librenms
    component: mysql
spec:
  initContainers:
  - name: mysql-volume-preparer
    image: docker.io/tpboudreau/librenms-mysql-prepare-volume
    envFrom:
    - configMapRef:
        name: mysql
    volumeMounts:
    - name: mysql-volume
      subPath: configuration
      mountPath: /etc/mysql/conf.d
    - name: mysql-volume
      subPath: database
      mountPath: /var/lib/mysql
    - name: mysql-volume
      subPath: initialization
      mountPath: /docker-entrypoint-initdb.d
  containers:
  - name: mysql-provider
    image: docker.io/mariadb/server:10.4 
    envFrom:
    - configMapRef:
        name: mysql
    env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: application
          key: mysql_root_password
    - name: MYSQL_USER
      valueFrom:
        secretKeyRef:
          name: application
          key: librenms_mysql_user
    - name: MYSQL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: application
          key: librenms_mysql_password
    volumeMounts:
    - name: mysql-volume
      subPath: configuration
      mountPath: /etc/mysql/conf.d
    - name: mysql-volume
      subPath: database
      mountPath: /var/lib/mysql
    - name: mysql-volume
      subPath: initialization
      mountPath: /docker-entrypoint-initdb.d
    - name: mysql-socket
      mountPath: /sock
  - name: mysql-controller
    image: docker.io/tpboudreau/librenms-controller
    securityContext:
      capabilities:
        add: ["NET_RAW", "NET_ADMIN"]
    envFrom:
    - configMapRef:
        name: controller
    - configMapRef:
        name: controller-mysql
    volumeMounts:
    - name: mysql-socket
      mountPath: /sock
    ports:
    - name: mysql
      containerPort: 33306
      protocol: TCP
  volumes:
  - name: mysql-volume
    persistentVolumeClaim:
      claimName: mysql-volume
  - name: mysql-socket
    emptyDir:
      medium: Memory
